/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.robert.ticket;
import java.sql.Driver;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.Date;
import java.time.LocalDateTime;


/**
 *
 * @author DELL_PC1
 */
public class Reservation extends javax.swing.JFrame {

    /**
     * Creates new form Reservation
     */
    public Reservation() {
        
        initComponents();
        initDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        showCombo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        priceCombo = new javax.swing.JComboBox<>();
        dateLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textLastName = new javax.swing.JTextField();
        textFirstName = new javax.swing.JTextField();
        textEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textPin = new javax.swing.JTextField();
        typeCombo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Reserve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Abandon Work");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Concert ");

        jLabel2.setText("Select  price");

        priceCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceComboActionPerformed(evt);
            }
        });

        dateLabel.setText("-");

        jLabel4.setText("Current Date");

        jLabel3.setText("Last Name");

        jLabel5.setText("First Name");

        jLabel6.setText("Email");

        jLabel7.setText("Phone");

        jLabel8.setText("Pin");

        typeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "VIP", "REGULAR", "ECONOMIC" }));

        jLabel9.setText("Select Condition ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(dateLabel)
                        .addContainerGap(622, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(showCombo, 0, 318, Short.MAX_VALUE)
                                .addComponent(priceCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(typeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel3))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textPin, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54))))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dateLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(textLastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6))
                            .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(priceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean valid =true;
        boolean ticketGO=true;
        boolean verbose=false;
      
        
        // test combo Show
        String showStatus =showCombo.getSelectedItem().toString();
        String showValid = showStatus.substring(0,4);
        // test combo price
        
        String priceStatus = priceCombo.getSelectedItem().toString();
        double priceValid = Double.valueOf(priceStatus);
        // System.out.println(priceValid);
        
        String typeStatus = typeCombo.getSelectedItem().toString();
       /// System.out.println(typeStatus);
        String typeValid;
            if(typeStatus.length()>3){

               typeValid = typeStatus.substring(0,4);
            }else{
                typeValid=typeStatus;
                // nothing to do
            }
       
                
        if(showValid.equals("NONE")){
          JOptionPane.showMessageDialog(null,"Show  Name  empty","Info Validation",1);
          valid =false;
        }else{
            if(verbose){
                JOptionPane.showMessageDialog(null,"Show Name Ok","Info Validation",1);
            }
         valid =true;
         }
        ticketGO = ticketGO & valid;
                 
        if(priceValid ==0.0){
          JOptionPane.showMessageDialog(null,"Price empty","Info Validation",1);
          valid =false;
        }else{
            if(verbose){
                JOptionPane.showMessageDialog(null,"Price Ok","Info Validation",1);
            }
         valid =true;
        }
        ticketGO = ticketGO & valid;
        
        if(typeValid.equals("NONE")){
          JOptionPane.showMessageDialog(null,"Type Status empty","Info Validation",1);
          valid =false;
        }else{
            if(verbose){
                JOptionPane.showMessageDialog(null,"Status Ok","Info Validation",1);
            }
         valid =true;
        }
        ticketGO = ticketGO & valid;
        
        
          if(textLastName.getText().isEmpty()){
          JOptionPane.showMessageDialog(null,"Last Name  empty","Info Validation",1);
          valid =false;
        }else{
            if(verbose){
                JOptionPane.showMessageDialog(null,"Last Name Ok","Info alidation",1);
            }
         valid =true;
        }
        ticketGO = ticketGO & valid;
        
     
      
         if(textFirstName.getText().isEmpty()){
          JOptionPane.showMessageDialog(null,"First Name  empty","Info Validation",1);
          valid =false;
        }else{
           if(verbose){
            JOptionPane.showMessageDialog(null,"First Name Ok","Info Validation",1);
           }
           valid =true;
        }
         
         ticketGO = ticketGO & valid;
        if(textEmail.getText().isEmpty()){
          JOptionPane.showMessageDialog(null,"Email  empty","Info Validation",1);
          valid =false;
        }else{
             if(verbose){
             JOptionPane.showMessageDialog(null,"Email Ok","Info Validation",1);
             }
              valid =true;
        }
         ticketGO = ticketGO & valid;
       
         if(textPhone.getText().isEmpty()){
          JOptionPane.showMessageDialog(null,"Phone Number empty","Info Validation",1);
          valid =false;
        }else{
              if(verbose){
             JOptionPane.showMessageDialog(null,"Phone Number Ok","Info Validation",1);
              }
              valid =true;
        }   
         
          if(textPin.getText().isEmpty()){
          JOptionPane.showMessageDialog(null,"Security PIN  empty","Info Validation",1);
          valid =false;
        }else{
              if(verbose){
             JOptionPane.showMessageDialog(null,"Security PIN Ok","Info Validation",1);
              }
              valid =true;
        }   
         
           
         ticketGO = ticketGO & valid;
        
        
         if( ticketGO){
             
                  
        String myFirstName = textFirstName.getText();
        String myLastName = textLastName.getText();
        String myEmail = textEmail.getText();
        String myPhoneNumber = textPhone.getText();
     
        //String myPriceShow = priceCombo.getSelectedItem().toString();
        //String localDate = dateLabel.getText();
     
        String myShow = showCombo.getSelectedItem().toString();
       
         String ticketType = typeCombo.getSelectedItem().toString();
        //String ticketType="VIP";
         
        String priceSelect = priceCombo.getSelectedItem().toString();
        double myPrice = Double.valueOf(priceSelect);
        
        // double myPrice = 100.0;
        String myDateShow = dateLabel.getText();
        
        // Codul de siguranta PIN
          String myPin = textPin.getText();

//Create ticket
        
                
        TicketsManager tm = new TicketsManager();
        PurchasedTicket pt = tm.createTicket( myFirstName, myLastName,  myEmail, myPhoneNumber, myShow,  LocalDateTime.now(), ticketType, myPrice, myDateShow,  myPin);
        tm.generateElectronicTicket(pt);
        
         //System.out.println( "First Name: " + myFirstName + "Last Name: " + myLastName + " | Email: " + myEmail + " | Phone Number: " + myPhoneNumber + " | " + myShow + " | Purchase Date: " + LocalDateTime.now() + "| Ticket Type:" + ticketType + "| Price: " +myPrice + "| Purchase Date: " myDateShow + "| " + myPin);
             String myQr = pt.toString();
             //System.out.println("data curenta este " + myDateShow);
           
         
        try {    
             DriverManager.registerDriver(new com.microsoft.sqlserver.jdbc.SQLServerDriver());
           
             Connection conn = null;
            String dbURL = "jdbc:sqlserver://localhost\\DELL_ROBERT:1433;databaseName=ticket;encrypt=false";
            String user = "appcontrol";
            String pass = "baiamare2024";
            conn = DriverManager.getConnection(dbURL, user, pass);
            
            if (conn != null) {
           
                String insertQuery = "INSERT INTO [ticket].[dbo].[client] ([lastName], [firstName],[showBay], [price], [type], [email], [phone], [pyn], [qr], [stare], [datavalid]) VALUES (?, ?, ?, ?, ?, ?, ? ,? , ?, ?, ?)";
                PreparedStatement pStmt = conn.prepareStatement(insertQuery);  

                                
                    pStmt.setString(1, myLastName);
                    pStmt.setString(2, myFirstName);
                    pStmt.setString(3, myShow);
                    pStmt.setDouble(4, myPrice);
                    pStmt.setString(5, ticketType);
                    pStmt.setString(6, myEmail);
                    pStmt.setString(7, myPhoneNumber);
                    pStmt.setString(8, myPin); 
                    pStmt.setString(9, myQr); 
                    pStmt.setString(10, "ACTIV"); 
                    pStmt.setString(11, "01/01/2001");
                    pStmt.execute(); 
            // end of opration
                
             JOptionPane.showMessageDialog(null,"Ticket Data Ok -> QR print ","Info Validation",1);
                         
             this.dispose();
            }
         
           } catch (SQLException e) {
               System.out.println("Error insert data" );
            //e.printStackTrace();
        }
         }
        
        
         

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void priceComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceComboActionPerformed

      private void initDatabase(){
         String showList = null;
         String priceList = null;
         Date dt = new Date();
         String currentDate = dt.toString();
         dateLabel.setText(currentDate);
          try {

            DriverManager.registerDriver(new com.microsoft.sqlserver.jdbc.SQLServerDriver());
            Connection conn = null;
            String dbURL = "jdbc:sqlserver://localhost\\DELL_ROBERT:1433;databaseName=ticket;encrypt=false";
            String user = "appcontrol";
            String pass = "baiamare2024";
            conn = DriverManager.getConnection(dbURL, user, pass);
            
            if (conn != null) {
                //JOptionPane.showMessageDialog(null,"Datatabase connetion Ok","Database",1);
               
            
                 // interogare show
                 String interogareShow = "SELECT name, location, data FROM [ticket].[dbo].[show]";
                 Statement stmtShow = conn.createStatement();
                 ResultSet rShow = stmtShow.executeQuery(interogareShow);
              
               
           
           while(rShow.next()) {
               /*
               System.out.println(rs.getString("name"));
               System.out.println(rs.getString("location"));
               System.out.println(rs.getString("data"));
               */
                showList  = rShow.getString("name") ;
                showList = showList + " | " + rShow.getString("location");
                showList = showList + " | " +rShow.getString("data");
                showCombo.addItem(showList);
               }
            stmtShow.close();
            rShow.close();
            
                 String interogarePrice = "SELECT   priceTicket FROM [ticket].[dbo].[price]";
                 Statement stmtPrice = conn.createStatement();
                 ResultSet rsPrice = stmtPrice.executeQuery(interogarePrice);
              
               
           
           while(rsPrice.next()) {
               /*
               System.out.println(rs.getString("name"));
               System.out.println(rs.getString("location"));
               System.out.println(rs.getString("data"));
               */
              priceList =  rsPrice.getString("priceTicket");
           
                priceCombo.addItem( priceList);
               }
            stmtPrice.close();
            rsPrice.close();
            
            
            conn.close();

             
            }
               } catch (SQLException ex) {
                  System.out.println("Connection failed:");
                     JOptionPane.showMessageDialog(null,"Datatabase connetion FAILED","Database",1);    
                //ex.printStackTrace();
            }

      }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> priceCombo;
    private javax.swing.JComboBox<String> showCombo;
    private javax.swing.JTextField textEmail;
    private javax.swing.JTextField textFirstName;
    private javax.swing.JTextField textLastName;
    private javax.swing.JTextField textPhone;
    private javax.swing.JTextField textPin;
    private javax.swing.JComboBox<String> typeCombo;
    // End of variables declaration//GEN-END:variables
}
